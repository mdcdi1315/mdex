plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id 'net.darkhax.curseforgegradle'
    id "com.modrinth.minotaur"
}

base {
    archivesName = "${mod_id}-neoforge-${release_cycle}-${minecraft_version}"
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }

    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }

    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})"
        }

        client {
            client()
        }

        server {
            server()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

apply from: rootProject.file('repositories.gradle')
apply from: 'dependencies.gradle'

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    dependsOn('build')
    description = 'Publishes the NeoForge build to CurseForge.'
    group = 'publishing'

    apiToken = project.findProperty("curseforge.api_key") ?: System.getenv("CURSEFORGE_TOKEN") ?: "none"

    def mainFile = upload(curseforge_project_id, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
    mainFile.changelog = rootProject.file('CHANGELOG.md').text
    mainFile.addRequirement("balm")
    project.minecraft_versions.split(',').toList().each { mainFile.addGameVersion(it) }
    mainFile.releaseType = "release"
    mainFile.addModLoader("NeoForge")
}

modrinth {
    token = project.findProperty("modrinth.token") ?: System.getenv("MODRINTH_TOKEN") ?: "none"
    projectId = project.modrinth_project_id
    versionType = project.modrinth_release_type
    versionNumber = project.version + "+neoforge-" + project.minecraft_version
    uploadFile = jar
    changelog = rootProject.file("CHANGELOG.md").text
    gameVersions = project.minecraft_versions.split(',').toList()
    syncBodyFrom = rootProject.file("modpage.md").text
    loaders = ['neoforge']
    dependencies {
        required.project "balm"
    }
}